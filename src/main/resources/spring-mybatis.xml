<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <!--<context:component-scan base-package="net.aazj.service,net.aazj.aop" />-->
   <!-- <context:component-scan base-package="com.*" />-->

   <!--  引入配置文件
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:application.properties" />
    </bean>
-->
    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:application.properties" />
    <!-- 配置数据源Master -->
    <bean name="dataSourceMaster" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.loginsecurity.url}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="${maxActive}" />
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}" />
    </bean>
    <!-- 配置数据源Slave -->
    <bean name="dataSourceSlave" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="${maxActive}" />
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}" />
    </bean>
    <bean id="dataSource" class="com.wbliu.cecdemo.userManager.common.myBatis.ThreadLocalRountingDataSource">
        <property name="defaultTargetDataSource" ref="dataSourceMaster" />
        <property name="targetDataSources">
            <map key-type="com.wbliu.cecdemo.userManager.common.myBatis.DataSources">
                <entry key="MASTER" value-ref="dataSourceMaster"/>
                <entry key="SLAVE" value-ref="dataSourceSlave"/>
                <!-- 这里还可以加多个dataSource -->
            </map>
        </property>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath*:com/wbliu/cecdemo/userManager/mapping/**/*.xml" />
    </bean>
    <!-- Transaction manager for a single JDBC DataSource -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wbliu.mavenProject.demo2.userManager.mapping" />
       <!--  <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    </bean>





    <!--

        config first dataSource
        <bean id="dataSourceOne" class="org.apache.commons.dbcp.BasicDataSource"
        <bean id="dataSourceOne" class="com.jolbox.bonecp.BoneCPDataSource"
              destroy-method="close">
            <property name="driverClass" value="${jdbc.driverClassName}}" />
            <property name="jdbcUrl" value="${jdbc.url}" />
            <property name="username" value="${jdbc.user}" />
            <property name="password" value="${jdbc.password}" />
             初始化连接大小
            <property name="minConnectionsPerPartition" value="${initialSize}"></property>
             连接池最大数量
            <property name="maxConnectionsPerPartition" value="${maxActive}"></property>
            &lt;!&ndash; 连接池最大空闲 &ndash;&gt;
            <property name="maxIdle" value="${maxIdle}"></property>
            &lt;!&ndash; 连接池最小空闲 &ndash;&gt;
            <property name="minIdle" value="${minIdle}"></property>
            &lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;
            <property name="maxWait" value="${maxWait}"></property>
        </bean>

        config second dataSource

        <bean id="dataSourceTwo" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
            <property name="driverClass" value="${jdbc.driverClassName}" />
            <property name="jdbcUrl" value="${jdbc.loginsecurity.url}" />
            <property name="username" value="${jdbc.user}" />
            <property name="password" value="${jdbc.password}" />
             初始化连接大小
            <property name="minConnectionsPerPartition" value="${initialSize}"></property>
             连接池最大数量
            <property name="maxConnectionsPerPartition" value="${maxActive}"></property>
            &lt;!&ndash; 连接池最大空闲 &ndash;&gt;
            <property name="maxIdle" value="${maxIdle}"></property>
            &lt;!&ndash; 连接池最小空闲 &ndash;&gt;
            <property name="minIdle" value="${minIdle}"></property>
            &lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;
            <property name="maxWait" value="${maxWait}"></property>
        </bean>

             对数据源进行事务管理
            <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSourceOne"/>
            </bean>


            config dataSource
        <bean id="dataSource" class="DynamicDataSource">
            <property name="targetDataSources">
                <map key-type="java.lang.String">
                    <entry value-ref="dataSourceOne" key="dataSourceOne"></entry>
                    <entry value-ref="dataSourceTwo" key="dataSourceTwo"></entry>
                </map>
            </property>
            <property name="defaultTargetDataSource" ref="dataSourceTwo"></property>      &lt;!&ndash; 默认使用ds1的数据源 &ndash;&gt;
        </bean>

         mybatis配置
         配置SqlSessionFactoryBean
        <bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSourceOne" />
             mapper和resultmap配置路径
            <property name="mapperLocations">
                <list>
                    <value>classpath:com/wbliu/mavenProject/demo2/userManager/mapping/mapper1/*Mapper.xml</value>
                </list>
            </property>
        </bean>

         配置SqlSessionFactoryBean
        <bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSourceTwo" />

             mapper和resultmap配置路径
            <property name="mapperLocations">
                <list>
                    <value>classpath:com/wbliu/mavenProject/demo2/userManager/mapping/mapper2/*Mapper.xml</value>
                </list>
            </property>
        </bean>





         事务拦截的类及方法
        <tx:advice id="txAdvice" transaction-manager="transactionManager">
            <tx:attributes>
                <tx:method name="get*" read-only="true" />
                <tx:method name="find*" read-only="true" />
                <tx:method name="query*" read-only="true" />
                <tx:method name="is*" read-only="true" />
                <tx:method name="do*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
                <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
                <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
                <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
            </tx:attributes>
        </tx:advice>
        <aop:config proxy-target-class="true">
            <aop:advisor pointcut="execution(* app..service..*.*(..))" advice-ref="txAdvice" />
        </aop:config>


         spring和MyBatis完美整合，不需要mybatis的配置映射文件
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource" />
            &lt;!&ndash; 自动扫描mapping.xml文件 &ndash;&gt;
            <property name="mapperLocations" value="classpath:com/wbliu/mavenProject/demo2/userManager/mapping/*.xml"></property>
        </bean>
         DAO接口所在包名，Spring会自动查找其下的类
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="com.wbliu.mavenProject.demo2.userManager.dao" />
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1"></property>
        </bean>

        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="com.wbliu.mavenProject.demo2.userManager.dao" />
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2"></property>
        </bean>

        扫描mapper文件
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="com.wbliu.mavenProject.demo2.userManager.mapping.mapper1" />
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1"></property>
        </bean>

        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="com.wbliu.mavenProject.demo2.userManager.mapping.mapper1" />
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2"></property>
        </bean>

        &lt;!&ndash; (事务管理)transaction manager, use JtaTransactionManager for global tx &ndash;&gt;
        <bean id="transactionManager"
              class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource" />
        </bean>

         事务管理器配置,单数据源事务
        <bean id="transactionManager"
              class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource" />
        </bean>
    -->


</beans>